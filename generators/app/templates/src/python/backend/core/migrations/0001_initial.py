# Generated by Django 3.2.18 on 2023-04-01 21:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('l10n', '0002_auto_20230401_2159'),
    ]

    operations = [
        migrations.CreateModel(
            name='EndUser',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('firebase_auth_id', models.CharField(help_text='Firebase Auth User ID', max_length=128, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('opt_in_communications', models.BooleanField(default=False, help_text='User consent for email and push notification communications')),
                ('mailing_list_subscribed', models.BooleanField(default=False, help_text='Marks if the user has been subscribed to the mailing list')),
                ('mailing_list_has_unsubscribed', models.BooleanField(default=False, help_text="Marks if the user has unsubscribed themselves to the mailing list (we shouldn't subsequently re-add them).")),
                ('mailing_list_id', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokeColor',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('names', models.ManyToManyField(to='l10n.Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokeGrowthRate',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('formula', models.CharField(max_length=255)),
                ('levels', models.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokeHabitat',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('names', models.ManyToManyField(to='l10n.Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokePokemon',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('base_experience', models.IntegerField()),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('names', models.ManyToManyField(to='l10n.Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokeType',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('names', models.ManyToManyField(to='l10n.Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokeTypeSlot',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slot', models.IntegerField(db_index=True)),
                ('pokemon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pokepokemon')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.poketype')),
            ],
            options={
                'ordering': ['slot'],
            },
        ),
        migrations.CreateModel(
            name='PokeSpecies',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('poke_api_id', models.CharField(max_length=10, unique=True)),
                ('base_happiness', models.IntegerField()),
                ('is_baby', models.BooleanField()),
                ('is_legendary', models.BooleanField()),
                ('is_mythical', models.BooleanField()),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pokecolor')),
                ('growth_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pokegrowthrate')),
                ('habitat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.pokehabitat')),
                ('names', models.ManyToManyField(to='l10n.Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pokepokemon',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pokespecies'),
        ),
        migrations.AddField(
            model_name='pokepokemon',
            name='types',
            field=models.ManyToManyField(through='core.PokeTypeSlot', to='core.PokeType'),
        ),
    ]
